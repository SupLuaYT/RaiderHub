--[[
  This file was obfuscated using Raider Obfuscator V1, This is encrypted to prevent code stealer or skid.
  
  > Credits <
  - SupLuaYT#0945 (Obfuscator Creator)
  - Yamete#2273 (Obfuscator Helper)
  
  > Discord <
  - (Raider Software) discord.gg/hDFDzyJWYV
]]

local IllIIlIIlIllIl=select;local IlIIIlIIlIllIl=string.byte;local IllIllIIlIllIl=string.sub;local IllIIlIllIllIl=string.char;local IlllIIIlIIlIllIlIl=loadstring;function IlllIlIlIIlIllIlIl(IlllIlIl)IlllIIIlIIlIllIlIl(IlllIlIl)(IllIlIlIlIlIlIlII)end;local function IllIlI1Il(Il,lI)local IllIlIlIl;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;local IlIlIlIlIl={["IllIlIl"]=nil;["IllIlIl"]=nil;["IllIlIl"]=nil;["IllIlIl"]=nil;["IllIlIl"]=nil;["IllIlIl"]=nil;["IllIlIl"]=nil;["IllIlIl"]=nil;};if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;local IllIlIlIIlIlIl=IlIlend;local IllllIl1IlIl = table.concat({'00101101','00101101','01010011','01000011','01010010','01001001','01010000','01010100','00001010','01101100','01101111','01100011','01100001','01101100','00100000','01010000','01101100','01100001','01100011','01100101','01001001','01000100','00100000','00111101','00100000','00100111','01101000','01110100','01110100','01110000','01110011','00111010','00101111','00101111','01110010','01100001','01110111','00101110','01100111','01101001','01110100','01101000','01110101','01100010','01110101','01110011','01100101','01110010','01100011','01101111','01101110','01110100','01100101','01101110','01110100','00101110','01100011','01101111','01101101','00101111','01010011','01110101','01110000','01001100','01110101','01100001','01011001','01010100','00101111','01010010','01100001','01101001','01100100','01100101','01110010','01001000','01110101','01100010','00101111','01101101','01100001','01101001','01101110','00101111','01000111','01100001','01101101','01100101','01110011','00101111','00100111','00101110','00101110','01100111','01100001','01101101','01100101','00101110','01010000','01101100','01100001','01100011','01100101','01001001','01100100','00111011','01101100','01101111','01100011','01100001','01101100','00100000','01100110','01101111','01110101','01101110','01100100','00101100','01101110','01101111','01110100','01000110','01101111','01110101','01101110','01100100','00111101','01110000','01100011','01100001','01101100','01101100','00101000','01100110','01110101','01101110','01100011','01110100','01101001','01101111','01101110','00101000','00101001','01100111','01100001','01101101','01100101','00111010','01001000','01110100','01110100','01110000','01000111','01100101','01110100','00101000','01010000','01101100','01100001','01100011','01100101','01001001','01000100','00101001','01100101','01101110','01100100','00101001','01101001','01100110','00100000','01010000','01101100','01100001','01100011','01100101','01001001','01000100','00100000','01100001','01101110','01100100','00100000','01100110','01101111','01110101','01101110','01100100','00100000','01110100','01101000','01100101','01101110','00100000','01101100','01101111','01100001','01100100','01110011','01110100','01110010','01101001','01101110','01100111','00101000','01100111','01100001','01101101','01100101','00111010','01001000','01110100','01110100','01110000','01000111','01100101','01110100','00101000','01010000','01101100','01100001','01100011','01100101','01001001','01000100','00101100','00100000','01110100','01110010','01110101','01100101','00101001','00101001','00101000','00101001','01100101','01101100','01110011','01100101','00100000','01100111','01100001','01101101','01100101','00111010','01000111','01100101','01110100','01010011','01100101','01110010','01110110','01101001','01100011','01100101','00101000','00100010','01010000','01101100','01100001','01111001','01100101','01110010','01110011','00100010','00101001','00101110','01001100','01101111','01100011','01100001','01101100','01010000','01101100','01100001','01111001','01100101','01110010','00111010','01001011','01101001','01100011','01101011','00101000','00100010','01000111','01100001','01101101','01100101','00100000','01001110','01101111','01110100','00100000','01010011','01110101','01110000','01110000','01101111','01110010','01110100','01100101','01100100','01011100','01101110','01001001','01000100','00100000','00111010','00100000','00100010','00101110','00101110','01100111','01100001','01101101','01100101','00101110','01010000','01101100','01100001','01100011','01100101','01001001','01100100','00101001','01100101','01101110','01100100','00111011','00001010',}) function IlllIlI_I(IlI) local function IllIlI_IlIl_IIlIlIl(Il) return string.char(tonumber(Il, 2));end;return (IlI:gsub("(".. ("[01]"):rep(8) .. ")", IllIlI_IlIl_IIlIlIl));end;local IlIlIl = IllllIl1IlIl _G.IllIIllIlIlI = IlllIlI_I(IlIlIl);IlllIlIlIIlIllIlIl(_G.IllIIllIlIlI);function IlI(IlllIlIlIlIlIl)if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return elseif (IllIlI/IlIlI) then return end;while (IllIlI/IlIlI)do return end;if (IllIlI/IlIlI)then return not nil end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;if Il>(lI-IllI)then return IllIlIlIl end;while(IllIl/lIlIl)do return Il end;if(IllIlIl/IlIlll)then return elseif not IllIlIlIlIlI then return Il end;end;
